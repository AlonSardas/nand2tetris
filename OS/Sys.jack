// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
/**
 * A library that supports various program execution services.
 */
class Sys {

    static int cyclesPerMillisecond;

    /** Performs all the initializations required by the OS. */
    function void init() {
        let cyclesPerMillisecond = 50;

        // Note: the order is important
        do Memory.init();
        do Math.init();
        do Screen.init();
        do Output.init();
        do Keyboard.init();
        // do String.init();

        do Main.main();
        return;
    }

    /** Halts the program execution. */
    function void halt() {
        while (true) {
            // Wait
        }
        return;  // Should not reach here
    }

    /** Waits approximately duration milliseconds and returns.  */
    function void wait(int duration) {
        var int cyclesCounter;

        while (duration > 0) {

            let cyclesCounter = cyclesPerMillisecond;
            while (cyclesCounter > 0) {
                let cyclesCounter = cyclesCounter - 1;
            }

            let duration = duration - 1;
        }

        return;
    }

    /** Displays the given error code in the form "ERR<errorCode>",
     *  and halts the program's execution. */
    function void error(int errorCode) {
        do Screen.clearScreen();
        do Output.moveCursor(0, 0);
        do Output.printString("ERR");
        do Output.printInt(errorCode);
        do Sys.halt();

        return;  // Should not reach here
    }
}
